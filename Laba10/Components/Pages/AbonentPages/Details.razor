@page "/abonents/details"
@using Microsoft.EntityFrameworkCore
@using Laba10.Data
@inject IDbContextFactory<Laba10.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Просмотр</PageTitle>

<h1>Просмотр</h1>

<div>
    <hr />
    @if (abonent is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Фамилия</dt>
            <dd class="col-sm-10">@abonent.Familiya</dd>
            <dt class="col-sm-2">Имя</dt>
            <dd class="col-sm-10">@abonent.Imya</dd>
            <dt class="col-sm-2">Отчество</dt>
            <dd class="col-sm-10">@abonent.Otchestvo</dd>
            <dt class="col-sm-2">Адрес</dt>
            <dd class="col-sm-10">@abonent.Adres</dd>
            <dt class="col-sm-2">Телефон</dt>
            <dd class="col-sm-10">@abonent.Telefon</dd>
        </dl>
        <div>
            <a href="@($"/abonents/edit?abonentid={abonent.AbonentId}")">Редактировать</a> |
            <a href="@($"/abonents")">Возврат к списку абонентов</a>
        </div>
    }
</div>

@code {
    private Abonent? abonent;

    [SupplyParameterFromQuery]
    private int AbonentId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        abonent = await context.Abonents.FirstOrDefaultAsync(m => m.AbonentId == AbonentId);

        if (abonent is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
