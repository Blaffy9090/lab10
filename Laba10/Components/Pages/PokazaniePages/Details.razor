@page "/pokazanies/details"
@using Microsoft.EntityFrameworkCore
@using Laba10.Data
@inject IDbContextFactory<Laba10.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Просмотр</PageTitle>

<h1>Просмотр</h1>

<div>
    <hr />
    @if (pokazanie is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Дата показания</dt>
            <dd class="col-sm-10">@pokazanie.DataPokazaniya</dd>
            <dt class="col-sm-2">Значения показания</dt>
            <dd class="col-sm-10">@pokazanie.ZnacheniePokazaniya</dd>
        </dl>
        <div>
            <a href="@($"/pokazanies/edit?pokazanieid={pokazanie.PokazanieId}&abonentid={AbonentId}")">Редактировать</a> |
            <a href="@($"/pokazanies?schetchikid={pokazanie.SchetchikId}&abonentid={AbonentId}")">Возврат к списку показаний</a>
        </div>
    }
</div>

@code {
    [SupplyParameterFromQuery]
    public int? AbonentId { get; set; }

    private Pokazanie? pokazanie;

    [SupplyParameterFromQuery]
    private int PokazanieId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        pokazanie = await context.Pokazanies.FirstOrDefaultAsync(m => m.PokazanieId == PokazanieId);

        if (pokazanie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
