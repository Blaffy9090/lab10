@page "/schetchiks/delete"
@using Microsoft.EntityFrameworkCore
@using Laba10.Data
@inject IDbContextFactory<Laba10.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Удалить</PageTitle>

<h1>Удалить</h1>

<p>Вы уверены, что хотите удалить счетчик?</p>
<div>
    <h2>Schetchik</h2>
    <hr />
    @if (schetchik is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Номер счетчика</dt>
            <dd class="col-sm-10">@schetchik.NomerSchetchika</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Тип счетчика</dt>
            <dd class="col-sm-10">@schetchik.TipSchetchika</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Дата установки</dt>
            <dd class="col-sm-10">@schetchik.DataUstanovki</dd>
        </dl>
        <EditForm method="post" Model="schetchik" OnValidSubmit="DeleteSchetchik" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(schetchik is null)">Удалить</button> |
            <a href="/schetchiks?abonentid=@schetchik!.AbonentId">Возврат к списку счетчиков</a>
        </EditForm>
    }
</div>

@code {
    private Schetchik? schetchik;

    private int AbonentId { get; set; }

    [SupplyParameterFromQuery]
    private int SchetchikId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        schetchik = await context.Schetchiks.FirstOrDefaultAsync(m => m.SchetchikId == SchetchikId);

        if (schetchik is null)
        {
            NavigationManager.NavigateTo("notfound");
        }

        AbonentId = schetchik!.AbonentId;
    }

    private async Task DeleteSchetchik()
    {
        using var context = DbFactory.CreateDbContext();
        context.Schetchiks.Remove(schetchik!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/schetchiks?abonentid="+AbonentId);
    }
}
