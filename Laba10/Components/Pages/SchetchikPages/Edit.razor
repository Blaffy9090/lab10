@page "/schetchiks/edit"
@using Microsoft.EntityFrameworkCore
@using Laba10.Data
@inject IDbContextFactory<Laba10.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Редактировать</PageTitle>

<h1>Редактировать</h1>

<hr />
@if (Schetchik is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="Schetchik" OnValidSubmit="UpdateSchetchik" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary role="alert"/>
                <input type="hidden" name="Schetchik.SchetchikId" value="@Schetchik.SchetchikId" />
                <div class="mb-3">
                    <label for="nomerschetchika" class="form-label">Номер счетчика:</label>
                    <InputText id="nomerschetchika" @bind-Value="Schetchik.NomerSchetchika" class="form-control" />
                    <ValidationMessage For="() => Schetchik.NomerSchetchika" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="tipschetchika" class="form-label">Типа счетчика:</label>
                    <InputText id="tipschetchika" @bind-Value="Schetchik.TipSchetchika" class="form-control" />
                    <ValidationMessage For="() => Schetchik.TipSchetchika" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="dataustanovki" class="form-label">Дата установки:</label>
                    <InputDate id="dataustanovki" @bind-Value="Schetchik.DataUstanovki" class="form-control" />
                    <ValidationMessage For="() => Schetchik.DataUstanovki" class="text-danger" />
                </div>
                <div class="mb-3">
                    <input type="hidden" name="Schetchik.AbonentId" @bind="Schetchik.AbonentId" class="form-control">
                </div>
                <button type="submit" class="btn btn-primary">Сохранить</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/schetchiks?abonentid=@SchetchikId">Возврат к списку счетчиков</a>
</div>

@code {
    [SupplyParameterFromQuery]
    private int SchetchikId { get; set; }

    [SupplyParameterFromForm]
    private Schetchik? Schetchik { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        Schetchik ??= await context.Schetchiks.FirstOrDefaultAsync(m => m.SchetchikId == SchetchikId);

        if (Schetchik is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    // To protect from overposting attacks, enable the specific properties you want to bind to.
    // For more information, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task UpdateSchetchik()
    {
        using var context = DbFactory.CreateDbContext();
        context.Attach(Schetchik!).State = EntityState.Modified;

        try
        {
            await context.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!SchetchikExists(Schetchik!.SchetchikId))
            {
                NavigationManager.NavigateTo("notfound");
            }
            else
            {
                throw;
            }
        }

        NavigationManager.NavigateTo("/schetchiks?abonentid="+Schetchik!.AbonentId.ToString());
    }

    private bool SchetchikExists(int schetchikid)
    {
        using var context = DbFactory.CreateDbContext();
        return context.Schetchiks.Any(e => e.SchetchikId == schetchikid);
    }
}
